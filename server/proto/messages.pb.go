// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        v3.20.1
// source: messages.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EntityType int32

const (
	EntityType_BAND       EntityType = 0
	EntityType_ALBUM      EntityType = 1
	EntityType_SONG       EntityType = 2
	EntityType_CONCERT    EntityType = 3
	EntityType_MUSICIAN   EntityType = 4
	EntityType_MEMBERSHIP EntityType = 5
)

// Enum value maps for EntityType.
var (
	EntityType_name = map[int32]string{
		0: "BAND",
		1: "ALBUM",
		2: "SONG",
		3: "CONCERT",
		4: "MUSICIAN",
		5: "MEMBERSHIP",
	}
	EntityType_value = map[string]int32{
		"BAND":       0,
		"ALBUM":      1,
		"SONG":       2,
		"CONCERT":    3,
		"MUSICIAN":   4,
		"MEMBERSHIP": 5,
	}
)

func (x EntityType) Enum() *EntityType {
	p := new(EntityType)
	*p = x
	return p
}

func (x EntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (EntityType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x EntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntityType.Descriptor instead.
func (EntityType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type Genre int32

const (
	Genre_ROCK        Genre = 0
	Genre_ALTERNATIVE Genre = 1
	Genre_INDIE       Genre = 2
	Genre_BLUES       Genre = 3
	Genre_METAL       Genre = 4
)

// Enum value maps for Genre.
var (
	Genre_name = map[int32]string{
		0: "ROCK",
		1: "ALTERNATIVE",
		2: "INDIE",
		3: "BLUES",
		4: "METAL",
	}
	Genre_value = map[string]int32{
		"ROCK":        0,
		"ALTERNATIVE": 1,
		"INDIE":       2,
		"BLUES":       3,
		"METAL":       4,
	}
)

func (x Genre) Enum() *Genre {
	p := new(Genre)
	*p = x
	return p
}

func (x Genre) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Genre) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[1].Descriptor()
}

func (Genre) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[1]
}

func (x Genre) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Genre.Descriptor instead.
func (Genre) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId uint64 `protobuf:"varint,1,opt,name=reqId,proto3" json:"reqId,omitempty"`
	//  ReqType type = 2;
	Cancel bool `protobuf:"varint,3,opt,name=cancel,proto3" json:"cancel,omitempty"` //send again with cancel = true to cancel request or failed req on server side
	// Types that are assignable to Msg:
	//	*Request_TableReq
	//	*Request_SimpleReq
	//	*Request_StreamReq
	//	*Request_RangeReq
	Msg isRequest_Msg `protobuf_oneof:"msg"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetReqId() uint64 {
	if x != nil {
		return x.ReqId
	}
	return 0
}

func (x *Request) GetCancel() bool {
	if x != nil {
		return x.Cancel
	}
	return false
}

func (m *Request) GetMsg() isRequest_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *Request) GetTableReq() *TableReq {
	if x, ok := x.GetMsg().(*Request_TableReq); ok {
		return x.TableReq
	}
	return nil
}

func (x *Request) GetSimpleReq() *SimpleReq {
	if x, ok := x.GetMsg().(*Request_SimpleReq); ok {
		return x.SimpleReq
	}
	return nil
}

func (x *Request) GetStreamReq() *StreamReq {
	if x, ok := x.GetMsg().(*Request_StreamReq); ok {
		return x.StreamReq
	}
	return nil
}

func (x *Request) GetRangeReq() *RangeReq {
	if x, ok := x.GetMsg().(*Request_RangeReq); ok {
		return x.RangeReq
	}
	return nil
}

type isRequest_Msg interface {
	isRequest_Msg()
}

type Request_TableReq struct {
	TableReq *TableReq `protobuf:"bytes,4,opt,name=tableReq,proto3,oneof"`
}

type Request_SimpleReq struct {
	SimpleReq *SimpleReq `protobuf:"bytes,5,opt,name=simpleReq,proto3,oneof"`
}

type Request_StreamReq struct {
	StreamReq *StreamReq `protobuf:"bytes,6,opt,name=streamReq,proto3,oneof"`
}

type Request_RangeReq struct {
	RangeReq *RangeReq `protobuf:"bytes,7,opt,name=rangeReq,proto3,oneof"`
}

func (*Request_TableReq) isRequest_Msg() {}

func (*Request_SimpleReq) isRequest_Msg() {}

func (*Request_StreamReq) isRequest_Msg() {}

func (*Request_RangeReq) isRequest_Msg() {}

type Answer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId  uint64 `protobuf:"varint,1,opt,name=reqId,proto3" json:"reqId,omitempty"`
	Cancel bool   `protobuf:"varint,2,opt,name=cancel,proto3" json:"cancel,omitempty"`
	// Types that are assignable to Msg:
	//	*Answer_TableAns
	//	*Answer_SimpleAns
	//	*Answer_StreamAns
	//	*Answer_RangeAns
	Msg isAnswer_Msg `protobuf_oneof:"msg"`
}

func (x *Answer) Reset() {
	*x = Answer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *Answer) GetReqId() uint64 {
	if x != nil {
		return x.ReqId
	}
	return 0
}

func (x *Answer) GetCancel() bool {
	if x != nil {
		return x.Cancel
	}
	return false
}

func (m *Answer) GetMsg() isAnswer_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *Answer) GetTableAns() *TableAns {
	if x, ok := x.GetMsg().(*Answer_TableAns); ok {
		return x.TableAns
	}
	return nil
}

func (x *Answer) GetSimpleAns() *SimpleAns {
	if x, ok := x.GetMsg().(*Answer_SimpleAns); ok {
		return x.SimpleAns
	}
	return nil
}

func (x *Answer) GetStreamAns() *StreamAns {
	if x, ok := x.GetMsg().(*Answer_StreamAns); ok {
		return x.StreamAns
	}
	return nil
}

func (x *Answer) GetRangeAns() *RangeAns {
	if x, ok := x.GetMsg().(*Answer_RangeAns); ok {
		return x.RangeAns
	}
	return nil
}

type isAnswer_Msg interface {
	isAnswer_Msg()
}

type Answer_TableAns struct {
	TableAns *TableAns `protobuf:"bytes,3,opt,name=tableAns,proto3,oneof"`
}

type Answer_SimpleAns struct {
	SimpleAns *SimpleAns `protobuf:"bytes,4,opt,name=simpleAns,proto3,oneof"`
}

type Answer_StreamAns struct {
	StreamAns *StreamAns `protobuf:"bytes,5,opt,name=streamAns,proto3,oneof"`
}

type Answer_RangeAns struct {
	RangeAns *RangeAns `protobuf:"bytes,6,opt,name=rangeAns,proto3,oneof"`
}

func (*Answer_TableAns) isAnswer_Msg() {}

func (*Answer_SimpleAns) isAnswer_Msg() {}

func (*Answer_StreamAns) isAnswer_Msg() {}

func (*Answer_RangeAns) isAnswer_Msg() {}

type TableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First  uint32     `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	Last   uint32     `protobuf:"varint,2,opt,name=last,proto3" json:"last,omitempty"`
	Filter string     `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Type   EntityType `protobuf:"varint,4,opt,name=type,proto3,enum=EntityType" json:"type,omitempty"`
}

func (x *TableReq) Reset() {
	*x = TableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableReq) ProtoMessage() {}

func (x *TableReq) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableReq.ProtoReflect.Descriptor instead.
func (*TableReq) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *TableReq) GetFirst() uint32 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *TableReq) GetLast() uint32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *TableReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *TableReq) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_BAND
}

type SimpleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqString string     `protobuf:"bytes,1,opt,name=reqString,proto3" json:"reqString,omitempty"`
	Type      EntityType `protobuf:"varint,4,opt,name=type,proto3,enum=EntityType" json:"type,omitempty"`
}

func (x *SimpleReq) Reset() {
	*x = SimpleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleReq) ProtoMessage() {}

func (x *SimpleReq) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleReq.ProtoReflect.Descriptor instead.
func (*SimpleReq) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *SimpleReq) GetReqString() string {
	if x != nil {
		return x.ReqString
	}
	return ""
}

func (x *SimpleReq) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_BAND
}

type StreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqString     string     `protobuf:"bytes,1,opt,name=reqString,proto3" json:"reqString,omitempty"`
	SuggestedSize int32      `protobuf:"varint,2,opt,name=suggestedSize,proto3" json:"suggestedSize,omitempty"`
	Type          EntityType `protobuf:"varint,3,opt,name=type,proto3,enum=EntityType" json:"type,omitempty"`
}

func (x *StreamReq) Reset() {
	*x = StreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamReq) ProtoMessage() {}

func (x *StreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamReq.ProtoReflect.Descriptor instead.
func (*StreamReq) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *StreamReq) GetReqString() string {
	if x != nil {
		return x.ReqString
	}
	return ""
}

func (x *StreamReq) GetSuggestedSize() int32 {
	if x != nil {
		return x.SuggestedSize
	}
	return 0
}

func (x *StreamReq) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_BAND
}

type RangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqString     string     `protobuf:"bytes,1,opt,name=reqString,proto3" json:"reqString,omitempty"`
	SuggestedSize int32      `protobuf:"varint,2,opt,name=suggestedSize,proto3" json:"suggestedSize,omitempty"` //0 if we want only the whole size
	Offset        int32      `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Type          EntityType `protobuf:"varint,4,opt,name=type,proto3,enum=EntityType" json:"type,omitempty"`
}

func (x *RangeReq) Reset() {
	*x = RangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeReq) ProtoMessage() {}

func (x *RangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeReq.ProtoReflect.Descriptor instead.
func (*RangeReq) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *RangeReq) GetReqString() string {
	if x != nil {
		return x.ReqString
	}
	return ""
}

func (x *RangeReq) GetSuggestedSize() int32 {
	if x != nil {
		return x.SuggestedSize
	}
	return 0
}

func (x *RangeReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RangeReq) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_BAND
}

type TableAns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bands    []*Band    `protobuf:"bytes,1,rep,name=bands,proto3" json:"bands,omitempty"`
	Albums   []*Album   `protobuf:"bytes,2,rep,name=albums,proto3" json:"albums,omitempty"`
	Concerts []*Concert `protobuf:"bytes,3,rep,name=concerts,proto3" json:"concerts,omitempty"`
	Songs    []*Song    `protobuf:"bytes,4,rep,name=songs,proto3" json:"songs,omitempty"`
	Type     EntityType `protobuf:"varint,5,opt,name=type,proto3,enum=EntityType" json:"type,omitempty"`
}

func (x *TableAns) Reset() {
	*x = TableAns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableAns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableAns) ProtoMessage() {}

func (x *TableAns) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableAns.ProtoReflect.Descriptor instead.
func (*TableAns) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *TableAns) GetBands() []*Band {
	if x != nil {
		return x.Bands
	}
	return nil
}

func (x *TableAns) GetAlbums() []*Album {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *TableAns) GetConcerts() []*Concert {
	if x != nil {
		return x.Concerts
	}
	return nil
}

func (x *TableAns) GetSongs() []*Song {
	if x != nil {
		return x.Songs
	}
	return nil
}

func (x *TableAns) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_BAND
}

type SimpleAns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*SimpleAns_Band
	//	*SimpleAns_Album
	//	*SimpleAns_Song
	//	*SimpleAns_Concert
	//	*SimpleAns_Musician
	//	*SimpleAns_Membership
	Msg isSimpleAns_Msg `protobuf_oneof:"msg"`
}

func (x *SimpleAns) Reset() {
	*x = SimpleAns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleAns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleAns) ProtoMessage() {}

func (x *SimpleAns) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleAns.ProtoReflect.Descriptor instead.
func (*SimpleAns) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (m *SimpleAns) GetMsg() isSimpleAns_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *SimpleAns) GetBand() *Band {
	if x, ok := x.GetMsg().(*SimpleAns_Band); ok {
		return x.Band
	}
	return nil
}

func (x *SimpleAns) GetAlbum() *Album {
	if x, ok := x.GetMsg().(*SimpleAns_Album); ok {
		return x.Album
	}
	return nil
}

func (x *SimpleAns) GetSong() *Song {
	if x, ok := x.GetMsg().(*SimpleAns_Song); ok {
		return x.Song
	}
	return nil
}

func (x *SimpleAns) GetConcert() *Concert {
	if x, ok := x.GetMsg().(*SimpleAns_Concert); ok {
		return x.Concert
	}
	return nil
}

func (x *SimpleAns) GetMusician() *Musician {
	if x, ok := x.GetMsg().(*SimpleAns_Musician); ok {
		return x.Musician
	}
	return nil
}

func (x *SimpleAns) GetMembership() *Membership {
	if x, ok := x.GetMsg().(*SimpleAns_Membership); ok {
		return x.Membership
	}
	return nil
}

type isSimpleAns_Msg interface {
	isSimpleAns_Msg()
}

type SimpleAns_Band struct {
	Band *Band `protobuf:"bytes,1,opt,name=band,proto3,oneof"`
}

type SimpleAns_Album struct {
	Album *Album `protobuf:"bytes,2,opt,name=album,proto3,oneof"`
}

type SimpleAns_Song struct {
	Song *Song `protobuf:"bytes,3,opt,name=song,proto3,oneof"`
}

type SimpleAns_Concert struct {
	Concert *Concert `protobuf:"bytes,4,opt,name=concert,proto3,oneof"`
}

type SimpleAns_Musician struct {
	Musician *Musician `protobuf:"bytes,5,opt,name=musician,proto3,oneof"`
}

type SimpleAns_Membership struct {
	Membership *Membership `protobuf:"bytes,6,opt,name=membership,proto3,oneof"`
}

func (*SimpleAns_Band) isSimpleAns_Msg() {}

func (*SimpleAns_Album) isSimpleAns_Msg() {}

func (*SimpleAns_Song) isSimpleAns_Msg() {}

func (*SimpleAns_Concert) isSimpleAns_Msg() {}

func (*SimpleAns_Musician) isSimpleAns_Msg() {}

func (*SimpleAns_Membership) isSimpleAns_Msg() {}

type StreamAns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	IsFinal bool   `protobuf:"varint,2,opt,name=isFinal,proto3" json:"isFinal,omitempty"`
}

func (x *StreamAns) Reset() {
	*x = StreamAns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamAns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAns) ProtoMessage() {}

func (x *StreamAns) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAns.ProtoReflect.Descriptor instead.
func (*StreamAns) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *StreamAns) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamAns) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

type RangeAns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	IsFinal   bool   `protobuf:"varint,2,opt,name=isFinal,proto3" json:"isFinal,omitempty"`
	TotalSize int32  `protobuf:"varint,3,opt,name=totalSize,proto3" json:"totalSize,omitempty"`
}

func (x *RangeAns) Reset() {
	*x = RangeAns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeAns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeAns) ProtoMessage() {}

func (x *RangeAns) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeAns.ProtoReflect.Descriptor instead.
func (*RangeAns) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *RangeAns) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RangeAns) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *RangeAns) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type Membership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusName       string `protobuf:"bytes,1,opt,name=musName,proto3" json:"musName,omitempty"`
	BandName      string `protobuf:"bytes,2,opt,name=bandName,proto3" json:"bandName,omitempty"`
	UnixEntryDate int64  `protobuf:"varint,3,opt,name=unixEntryDate,proto3" json:"unixEntryDate,omitempty"`
	UnixQuitDate  int64  `protobuf:"varint,4,opt,name=unixQuitDate,proto3" json:"unixQuitDate,omitempty"`
}

func (x *Membership) Reset() {
	*x = Membership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Membership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Membership) ProtoMessage() {}

func (x *Membership) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Membership.ProtoReflect.Descriptor instead.
func (*Membership) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *Membership) GetMusName() string {
	if x != nil {
		return x.MusName
	}
	return ""
}

func (x *Membership) GetBandName() string {
	if x != nil {
		return x.BandName
	}
	return ""
}

func (x *Membership) GetUnixEntryDate() int64 {
	if x != nil {
		return x.UnixEntryDate
	}
	return 0
}

func (x *Membership) GetUnixQuitDate() int64 {
	if x != nil {
		return x.UnixQuitDate
	}
	return 0
}

type Concert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capacity     int32    `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Description  string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	UnixDateTime int64    `protobuf:"varint,3,opt,name=unixDateTime,proto3" json:"unixDateTime,omitempty"`
	Location     string   `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	BandNames    []string `protobuf:"bytes,5,rep,name=bandNames,proto3" json:"bandNames,omitempty"`
}

func (x *Concert) Reset() {
	*x = Concert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Concert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Concert) ProtoMessage() {}

func (x *Concert) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Concert.ProtoReflect.Descriptor instead.
func (*Concert) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *Concert) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *Concert) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Concert) GetUnixDateTime() int64 {
	if x != nil {
		return x.UnixDateTime
	}
	return 0
}

func (x *Concert) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Concert) GetBandNames() []string {
	if x != nil {
		return x.BandNames
	}
	return nil
}

type Band struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BandName      string        `protobuf:"bytes,1,opt,name=bandName,proto3" json:"bandName,omitempty"`
	Genre         Genre         `protobuf:"varint,2,opt,name=genre,proto3,enum=Genre" json:"genre,omitempty"`
	UnixFoundDate int64         `protobuf:"varint,3,opt,name=unixFoundDate,proto3" json:"unixFoundDate,omitempty"`
	UnixTermDate  int64         `protobuf:"varint,4,opt,name=unixTermDate,proto3" json:"unixTermDate,omitempty"`
	Description   string        `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	AlbumNames    []string      `protobuf:"bytes,6,rep,name=albumNames,proto3" json:"albumNames,omitempty"`
	Participants  []*Membership `protobuf:"bytes,7,rep,name=participants,proto3" json:"participants,omitempty"`
	Concerts      []*Concert    `protobuf:"bytes,8,rep,name=concerts,proto3" json:"concerts,omitempty"`
}

func (x *Band) Reset() {
	*x = Band{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Band) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Band) ProtoMessage() {}

func (x *Band) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Band.ProtoReflect.Descriptor instead.
func (*Band) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *Band) GetBandName() string {
	if x != nil {
		return x.BandName
	}
	return ""
}

func (x *Band) GetGenre() Genre {
	if x != nil {
		return x.Genre
	}
	return Genre_ROCK
}

func (x *Band) GetUnixFoundDate() int64 {
	if x != nil {
		return x.UnixFoundDate
	}
	return 0
}

func (x *Band) GetUnixTermDate() int64 {
	if x != nil {
		return x.UnixTermDate
	}
	return 0
}

func (x *Band) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Band) GetAlbumNames() []string {
	if x != nil {
		return x.AlbumNames
	}
	return nil
}

func (x *Band) GetParticipants() []*Membership {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *Band) GetConcerts() []*Concert {
	if x != nil {
		return x.Concerts
	}
	return nil
}

type Song struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongName  string `protobuf:"bytes,1,opt,name=songName,proto3" json:"songName,omitempty"`
	LengthSec int32  `protobuf:"varint,2,opt,name=lengthSec,proto3" json:"lengthSec,omitempty"`
	AlbumName string `protobuf:"bytes,3,opt,name=albumName,proto3" json:"albumName,omitempty"`
	BandName  string `protobuf:"bytes,4,opt,name=bandName,proto3" json:"bandName,omitempty"`
}

func (x *Song) Reset() {
	*x = Song{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *Song) GetSongName() string {
	if x != nil {
		return x.SongName
	}
	return ""
}

func (x *Song) GetLengthSec() int32 {
	if x != nil {
		return x.LengthSec
	}
	return 0
}

func (x *Song) GetAlbumName() string {
	if x != nil {
		return x.AlbumName
	}
	return ""
}

func (x *Song) GetBandName() string {
	if x != nil {
		return x.BandName
	}
	return ""
}

type Album struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	UnixReleaseDate int64   `protobuf:"varint,2,opt,name=unixReleaseDate,proto3" json:"unixReleaseDate,omitempty"`
	Songs           []*Song `protobuf:"bytes,3,rep,name=songs,proto3" json:"songs,omitempty"`
	BandName        string  `protobuf:"bytes,4,opt,name=bandName,proto3" json:"bandName,omitempty"`
}

func (x *Album) Reset() {
	*x = Album{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *Album) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Album) GetUnixReleaseDate() int64 {
	if x != nil {
		return x.UnixReleaseDate
	}
	return 0
}

func (x *Album) GetSongs() []*Song {
	if x != nil {
		return x.Songs
	}
	return nil
}

func (x *Album) GetBandName() string {
	if x != nil {
		return x.BandName
	}
	return ""
}

type Musician struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusName         string        `protobuf:"bytes,1,opt,name=musName,proto3" json:"musName,omitempty"`
	UnixDateOfBirth int64         `protobuf:"varint,2,opt,name=unixDateOfBirth,proto3" json:"unixDateOfBirth,omitempty"`
	Bio             string        `protobuf:"bytes,3,opt,name=bio,proto3" json:"bio,omitempty"`
	Memberships     []*Membership `protobuf:"bytes,4,rep,name=memberships,proto3" json:"memberships,omitempty"`
}

func (x *Musician) Reset() {
	*x = Musician{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Musician) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Musician) ProtoMessage() {}

func (x *Musician) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Musician.ProtoReflect.Descriptor instead.
func (*Musician) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *Musician) GetMusName() string {
	if x != nil {
		return x.MusName
	}
	return ""
}

func (x *Musician) GetUnixDateOfBirth() int64 {
	if x != nil {
		return x.UnixDateOfBirth
	}
	return 0
}

func (x *Musician) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Musician) GetMemberships() []*Membership {
	if x != nil {
		return x.Memberships
	}
	return nil
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe8, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x71, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x65, 0x71,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x08, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x09, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x2a, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x08, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xe7, 0x01, 0x0a, 0x06,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6e,
	0x73, 0x48, 0x00, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x12, 0x2a, 0x0a,
	0x09, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x09,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x09, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x41, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x41, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x6e, 0x73, 0x48, 0x00, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6e, 0x73, 0x42, 0x05,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x6d, 0x0a, 0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x09, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x70, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0b, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xab, 0x01, 0x0a,
	0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x62, 0x61, 0x6e,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x42, 0x61, 0x6e, 0x64, 0x52,
	0x05, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x06,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x65,
	0x72, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x05,
	0x73, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x6f,
	0x6e, 0x67, 0x52, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x09, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x42, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x04, 0x62, 0x61, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x48, 0x00, 0x52, 0x05,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x04, 0x73, 0x6f, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6f,
	0x6e, 0x67, 0x12, 0x24, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x69, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x69, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x69, 0x61,
	0x6e, 0x12, 0x2d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x39, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x41, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x22, 0x56, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x75, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x78, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x78, 0x51, 0x75, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x6e, 0x69,
	0x78, 0x51, 0x75, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x63, 0x65, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x78, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x6e, 0x69, 0x78, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x22, 0xa3, 0x02, 0x0a, 0x04, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x05, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x78, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e, 0x69,
	0x78, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e,
	0x69, 0x78, 0x54, 0x65, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x75, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x2f, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x12, 0x24, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x52, 0x08, 0x63,
	0x6f, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x73, 0x22, 0x7a, 0x0a, 0x04, 0x53, 0x6f, 0x6e, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x53, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x53, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x78, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x75, 0x6e,
	0x69, 0x78, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53,
	0x6f, 0x6e, 0x67, 0x52, 0x05, 0x73, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x08, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x69, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x75, 0x6e, 0x69, 0x78, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x75, 0x6e, 0x69, 0x78, 0x44, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x2d, 0x0a, 0x0b, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0b, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2a, 0x56, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x41, 0x4e, 0x44, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x42, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53,
	0x4f, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x43, 0x45, 0x52, 0x54,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x49, 0x41, 0x4e, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x10, 0x05,
	0x2a, 0x43, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x4f, 0x43,
	0x4b, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4c, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x44, 0x49, 0x45, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x42, 0x4c, 0x55, 0x45, 0x53, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x45,
	0x54, 0x41, 0x4c, 0x10, 0x04, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_messages_proto_goTypes = []interface{}{
	(EntityType)(0),    // 0: EntityType
	(Genre)(0),         // 1: Genre
	(*Request)(nil),    // 2: Request
	(*Answer)(nil),     // 3: Answer
	(*TableReq)(nil),   // 4: TableReq
	(*SimpleReq)(nil),  // 5: SimpleReq
	(*StreamReq)(nil),  // 6: StreamReq
	(*RangeReq)(nil),   // 7: RangeReq
	(*TableAns)(nil),   // 8: TableAns
	(*SimpleAns)(nil),  // 9: SimpleAns
	(*StreamAns)(nil),  // 10: StreamAns
	(*RangeAns)(nil),   // 11: RangeAns
	(*Membership)(nil), // 12: Membership
	(*Concert)(nil),    // 13: Concert
	(*Band)(nil),       // 14: Band
	(*Song)(nil),       // 15: Song
	(*Album)(nil),      // 16: Album
	(*Musician)(nil),   // 17: Musician
}
var file_messages_proto_depIdxs = []int32{
	4,  // 0: Request.tableReq:type_name -> TableReq
	5,  // 1: Request.simpleReq:type_name -> SimpleReq
	6,  // 2: Request.streamReq:type_name -> StreamReq
	7,  // 3: Request.rangeReq:type_name -> RangeReq
	8,  // 4: Answer.tableAns:type_name -> TableAns
	9,  // 5: Answer.simpleAns:type_name -> SimpleAns
	10, // 6: Answer.streamAns:type_name -> StreamAns
	11, // 7: Answer.rangeAns:type_name -> RangeAns
	0,  // 8: TableReq.type:type_name -> EntityType
	0,  // 9: SimpleReq.type:type_name -> EntityType
	0,  // 10: StreamReq.type:type_name -> EntityType
	0,  // 11: RangeReq.type:type_name -> EntityType
	14, // 12: TableAns.bands:type_name -> Band
	16, // 13: TableAns.albums:type_name -> Album
	13, // 14: TableAns.concerts:type_name -> Concert
	15, // 15: TableAns.songs:type_name -> Song
	0,  // 16: TableAns.type:type_name -> EntityType
	14, // 17: SimpleAns.band:type_name -> Band
	16, // 18: SimpleAns.album:type_name -> Album
	15, // 19: SimpleAns.song:type_name -> Song
	13, // 20: SimpleAns.concert:type_name -> Concert
	17, // 21: SimpleAns.musician:type_name -> Musician
	12, // 22: SimpleAns.membership:type_name -> Membership
	1,  // 23: Band.genre:type_name -> Genre
	12, // 24: Band.participants:type_name -> Membership
	13, // 25: Band.concerts:type_name -> Concert
	15, // 26: Album.songs:type_name -> Song
	12, // 27: Musician.memberships:type_name -> Membership
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Answer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableAns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleAns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamAns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeAns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Membership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Concert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Band); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Song); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Album); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Musician); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Request_TableReq)(nil),
		(*Request_SimpleReq)(nil),
		(*Request_StreamReq)(nil),
		(*Request_RangeReq)(nil),
	}
	file_messages_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Answer_TableAns)(nil),
		(*Answer_SimpleAns)(nil),
		(*Answer_StreamAns)(nil),
		(*Answer_RangeAns)(nil),
	}
	file_messages_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SimpleAns_Band)(nil),
		(*SimpleAns_Album)(nil),
		(*SimpleAns_Song)(nil),
		(*SimpleAns_Concert)(nil),
		(*SimpleAns_Musician)(nil),
		(*SimpleAns_Membership)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
